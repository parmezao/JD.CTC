@page "/legados"

@using JD.CTC.Data.Repositories.Interfaces;
@using JD.CTC.Shared.Model;
@using JD.CTC.Shared.Extensions;
@using Microsoft.Extensions.Configuration;

@inject ILegadoRepository repository;
@inject IConfiguration configuration;
@inject NavigationManager navigationManager;

<h1>Legados</h1>
<br />

@if (legados == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <table class="table table-striped">
        <caption>Legados obtidos utilizando: EntityFramework</caption>        
        <thead class="thead-dark">
            <tr>
                <th>Cod Legado</th>
                <th>Nome</th>
                <th>Situação</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var legado in legados)
            {
                <tr>
                    <td>@legado.CdLegado</td>
                    <td>@legado.NomeLegado</td>
                    <td>@legado.SitLegado.ToSituacaoLegado()</td>
                </tr>
            }
        </tbody>
    </table>
}
<br />
@if (legadosDappper == null)
{
    <p><em>Carregando...</em></p>
}
else
{
    <table class="table table-striped">
        <caption>Legados obtidos utilizando: Dapper</caption>
        <caption>Base de Dados: @tipoBanco</caption>
        <thead class="thead-dark">
            <tr>
                <th>Cod Legado</th>
                <th>Nome</th>
                <th>Situação</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var legado in legadosDappper)
            {
                <tr>
                    <td>@legado.CdLegado</td>
                    <td>@legado.NomeLegado</td>
                    <td>@legado.SitLegado.ToSituacaoLegado()</td>
                </tr>
            }
        </tbody>
    </table>
}

<input @onclick="RefreshScreen" type="button" class="btn btn-primary" value="Atualizar" />
<input @onclick="IncluirAlterarLegado" type="button" class="btn btn-primary" value="Incluir" />
<br />

@code {

    private IEnumerable<Legado> legados;
    private IEnumerable<Legado> legadosDappper;
    private string tipoBanco;

    protected override async Task OnInitializedAsync()
    {
        await Refresh();

        tipoBanco = configuration["TipoBanco"];
    }

    protected async Task Refresh()
    {
        // Obtém os dados utilizando EntityFramework
        legados = await repository.GetLegadosAsync();

        // Obtém os dados utilizando a extensão Dapper
        legadosDappper = await repository.GetLegadosDapperAsync();
    }

    protected async Task RefreshScreen(MouseEventArgs e)
    {
        await Refresh();
        StateHasChanged();
    }

    protected void IncluirAlterarLegado()
    {
        navigationManager.NavigateTo("/legados/incluir");
    }
}
